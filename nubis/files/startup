#!/bin/bash

# Shove all logs to a log file as well
exec &> >(tee >( ts > /var/log/tableau-startup.log)) 2>&1

set -x

export PATH=/usr/local/bin:$PATH

USERNAME=tableauops
PASSWORD=$(pwgen -n1)

#XXX Secrets needs to be generated
cat <<EOF > /etc/tableau/secrets
# You can use this as a template for the secrets file used with the
# automated-installer script.
#
# Note: If you do not enter the tsm_admin_pass or the
# tableau_server_admin_pass in this file, you will be prompted to enter this
# information during installation. However, you must enter the account names
# for tsm_admin_user and tableau_server_admin_user.

# Credentials for the account that is running the automated-installer script.
# This account will be added to the 'tsmadmin' group. The 'tsmadmin' group is
# created during the Tableau installation process. Members of the 'tsmadmin'
# group can run TSM commands.
#
tsm_admin_user="$USERNAME"
tsm_admin_pass="$PASSWORD"

# Enter a username and password to create the initial Tableau administrator
# account. This account will be created in Tableau Server by the installation
# process and will have Tableau Server administrator rights. The user account
# will be local to Tableau Server and will not be a Linux OS account. If you
# are using LDAP or AD for authentication, then the account you specify for
# the Tableau administrator must be a valid account from the directory service.
#
tableau_server_admin_user="nubis"
tableau_server_admin_pass="$PASSWORD"
EOF

useradd -m -r $USERNAME
echo "$PASSWORD" | passwd $USERNAME --stdin

NUBIS_PROJECT=$(nubis-metadata NUBIS_PROJECT)
NUBIS_ENVIRONMENT=$(nubis-metadata NUBIS_ENVIRONMENT)
NUBIS_PURPOSE=$(nubis-metadata NUBIS_PURPOSE)

declare -a BOOTSTRAP_ARGS LICENSE_ARGS INSTALLER_ARGS

INSTALLER=$(ls /opt/tableau/tableau_server_automated_installer/automated-installer*/automated-installer)

CONFIG=/etc/tableau/settings.json

INSTALLER_ARGS=(-s /etc/tableau/secrets -f "$CONFIG" -r /etc/tableau/reg.json)

if [ "worker" == "$NUBIS_PURPOSE" ]; then
  echo "Worker Bee, joining with Coordinator"
  
  #XXX: Probably worth waiting here...
  consul kv get "$NUBIS_PROJECT-$NUBIS_ENVIRONMENT/$NUBIS_ENVIRONMENT/config/Bootstrap" 2>/dev/null | jq . | tee /etc/tableau/bootstrap.json
  
  if [ -s /etc/tableau/bootstrap.json ]; then
    BOOTSTRAP_ARGS=(-b /etc/tableau/bootstrap.json)
  fi

  #XXX: Bailing out
  exit

elif [ "coordinator" == "$NUBIS_PURPOSE" ]; then
  LICENSE=$(consul kv get "$NUBIS_PROJECT-$NUBIS_ENVIRONMENT/$NUBIS_ENVIRONMENT/config/License" 2>/dev/null)
  if [ -n "$LICENSE" ]; then
    LICENSE_ARGS=(-k "$LICENSE")
  fi
fi

set -x

rpm -ivh tableau-server-*.rpm

for lic in \
  /opt/tableau/tableau_server/packages/templates.*/license/tableau.lic.templ \
  /opt/tableau/tableau_server/packages/templates.*/license/tableauTabadmin.lic.templ \
  /opt/tableau/tableau_server/packages/bin.*/tableau.lic \
  ; do
  echo 'VENDOR tableau port=27010' >> "$lic"
done

until [ -r $CONFIG ]; do
  echo "Waiting for $CONFIG to be generated by confd ..."
  sleep 5
done

cd /opt && LANG=en_US.UTF-8 USER=root SUDO_USER=root $INSTALLER -a $USERNAME "${LICENSE_ARGS[@]}" "${BOOTSTRAP_ARGS[@]}" "${INSTALLER_ARGS[@]}" --accepteula tableau-server-*.rpm

#https://onlinehelp.tableau.com/current/server-linux/en-us/ports_license_daemon.htm

#XXX: Do we need to wait for startup to complete here ?
if [ "coordinator" == "$NUBIS_PURPOSE" ]; then
  TSM=$(ls /opt/tableau/tableau_server/packages/customer-bin.*/tsm)

  # establish admin session
  $TSM login --username "$USERNAME" --password "$PASSWORD"

  echo "recording bootstrap configuration"
  $TSM topology nodes get-bootstrap-file --file /etc/tableau/bootstrap.json
  consul kv put "$NUBIS_PROJECT-$NUBIS_ENVIRONMENT/$NUBIS_ENVIRONMENT/config/Bootstrap" @/etc/tableau/bootstrap.json
  
  consul kv put "$NUBIS_PROJECT-$NUBIS_ENVIRONMENT/$NUBIS_ENVIRONMENT/config/Username" "$USERNAME"
  consul kv put "$NUBIS_PROJECT-$NUBIS_ENVIRONMENT/$NUBIS_ENVIRONMENT/config/Password" "$PASSWORD"

  until tsm status -v; do
    echo "Waiting for TSM startup to complete"
    sleep 15
  done

  # Restore from last known good backup
  /usr/local/bin/vertical-tableau-backup restore
fi
